[{"D:\\VS Code Projects\\crypto_scraping\\src\\index.js":"1","D:\\VS Code Projects\\crypto_scraping\\src\\App.js":"2","D:\\VS Code Projects\\crypto_scraping\\src\\app\\store.js":"3","D:\\VS Code Projects\\crypto_scraping\\src\\Header.js":"4","D:\\VS Code Projects\\crypto_scraping\\src\\CoinPage.js":"5","D:\\VS Code Projects\\crypto_scraping\\src\\features\\currencySlice.js":"6","D:\\VS Code Projects\\crypto_scraping\\src\\HomePage.js":"7","D:\\VS Code Projects\\crypto_scraping\\src\\Banner.js":"8","D:\\VS Code Projects\\crypto_scraping\\src\\CoinsTable.js":"9","D:\\VS Code Projects\\crypto_scraping\\src\\Carousel.js":"10","D:\\VS Code Projects\\crypto_scraping\\src\\apin.js":"11","D:\\VS Code Projects\\crypto_scraping\\src\\CoinInfo.js":"12","D:\\VS Code Projects\\crypto_scraping\\src\\data.js":"13","D:\\VS Code Projects\\crypto_scraping\\src\\SelectButton.js":"14"},{"size":541,"mtime":1651360016718,"results":"15","hashOfConfig":"16"},{"size":720,"mtime":1651951575530,"results":"17","hashOfConfig":"16"},{"size":200,"mtime":1651261313975,"results":"18","hashOfConfig":"16"},{"size":2124,"mtime":1651354012940,"results":"19","hashOfConfig":"16"},{"size":4714,"mtime":1651360165896,"results":"20","hashOfConfig":"16"},{"size":458,"mtime":1651314484723,"results":"21","hashOfConfig":"16"},{"size":235,"mtime":1651311151352,"results":"22","hashOfConfig":"16"},{"size":1728,"mtime":1651354027316,"results":"23","hashOfConfig":"16"},{"size":6614,"mtime":1651354329780,"results":"24","hashOfConfig":"16"},{"size":2514,"mtime":1651354033436,"results":"25","hashOfConfig":"16"},{"size":630,"mtime":1651313856363,"results":"26","hashOfConfig":"16"},{"size":3684,"mtime":1651360276646,"results":"27","hashOfConfig":"16"},{"size":233,"mtime":1651313878743,"results":"28","hashOfConfig":"16"},{"size":819,"mtime":1651355516368,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uq724l",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\VS Code Projects\\crypto_scraping\\src\\index.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\App.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\app\\store.js",[],[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\Header.js",["76"],[],"import {\r\n  AppBar,\r\n  Container,\r\n  MenuItem,\r\n  Select,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CurrencyAndSymbol } from \"./features/currencySlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flex: 1,\r\n    color: \"gold\",\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fff\",\r\n    },\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // const currencySelector = useSelector(selectCurrency);\r\n  // const symbolSelector = useSelector(selectSymbol);\r\n\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [symbol, setSymbol] = useState(\"$\");\r\n\r\n  useEffect(() => {\r\n    if (currency === \"USD\") setSymbol(\"$\");\r\n    else if (currency === \"PKR\") setSymbol(\"RS\");\r\n\r\n    dispatch(CurrencyAndSymbol({ currency, symbol }));\r\n  }, [currency, symbol]);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <AppBar color=\"transparent\" position=\"static\">\r\n        <Container>\r\n          <Toolbar>\r\n            <Typography\r\n              onClick={() => navigate(\"/\")}\r\n              variant=\"h6\"\r\n              className={classes.title}\r\n            >\r\n              Crypto Scraping\r\n            </Typography>\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={currency}\r\n              style={{ width: 100, height: 40, marginLeft: 15 }}\r\n              onChange={(e) => setCurrency(e.target.value)}\r\n            >\r\n              <MenuItem value={\"USD\"}>USD</MenuItem>\r\n              <MenuItem value={\"PKR\"}>PKR</MenuItem>\r\n            </Select>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\VS Code Projects\\crypto_scraping\\src\\CoinPage.js",["77"],[],"import ReactHtmlParser from \"react-html-parser\";\r\nimport CoinInfo from \"./CoinInfo\";\r\nimport axios from \"axios\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SingleCoin } from \"./apin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrency } from \"./features/currencySlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst CoinPage = () => {\r\n  const { id } = useParams();\r\n  const [coin, setCoin] = useState();\r\n  const { currency, symbol } = useSelector(selectCurrency);\r\n\r\n  useEffect(() => {\r\n    const fetchCoin = async () => {\r\n      const { data } = await axios.get(SingleCoin(id));\r\n\r\n      // console.log(\"im runnig\");\r\n      // console.log(\"data\", data);\r\n      setCoin(data);\r\n    };\r\n    fetchCoin();\r\n  }, []);\r\n\r\n  // console.log(\"coin\", coin);\r\n  // console.log(\"id\", id);\r\n  // console.log(\"makeStyle\", makeStyles());\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      },\r\n    },\r\n    sidebar: {\r\n      width: \"30%\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n      },\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      marginTop: 25,\r\n      borderRight: \"2px solid grey\",\r\n    },\r\n    heading: {\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      fontFamily: \"Montserrat\",\r\n    },\r\n    description: {\r\n      width: \"100%\",\r\n      fontFamily: \"Montserrat\",\r\n      padding: 25,\r\n      paddingBottom: 15,\r\n      paddingTop: 0,\r\n      textAlign: \"justify\",\r\n    },\r\n    marketData: {\r\n      alignSelf: \"start\",\r\n      padding: 25,\r\n      paddingTop: 10,\r\n      width: \"100%\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        alignItems: \"start\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.sidebar}>\r\n        <img\r\n          src={coin?.image.large}\r\n          alt={coin?.name}\r\n          height=\"200\"\r\n          style={{ marginBottom: 20 }}\r\n        />\r\n        <Typography variant=\"h3\" className={classes.heading}>\r\n          {coin?.name}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" className={classes.description}>\r\n          {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n        </Typography>\r\n        <div className={classes.marketData}>\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n              Rank:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {numberWithCommas(coin?.market_cap_rank)}\r\n            </Typography>\r\n          </span>\r\n\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n              Current Price:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}\r\n              {numberWithCommas(\r\n                coin?.market_data.current_price[currency.toLowerCase()]\r\n              )}\r\n            </Typography>\r\n          </span>\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n              Market Cap:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}\r\n              {numberWithCommas(\r\n                coin?.market_data.market_cap[currency.toLowerCase()]\r\n                  .toString()\r\n                  .slice(0, -6)\r\n              )}\r\n              M\r\n            </Typography>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <CoinInfo coin={coin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinPage;\r\n","D:\\VS Code Projects\\crypto_scraping\\src\\features\\currencySlice.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\HomePage.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\Banner.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\CoinsTable.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\Carousel.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\apin.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\CoinInfo.js",["78","79","80"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HistoricalChart } from \"./apin\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport {\r\n  CircularProgress,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { chartDays } from \"./data\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrency } from \"./features/currencySlice\";\r\nimport SelectButton from \"./SelectButton\";\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n  const [historicData, setHistoricData] = useState();\r\n  const [days, setDays] = useState(1);\r\n  const [flag, setflag] = useState(false);\r\n  const { currency } = useSelector(selectCurrency);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n        marginTop: 0,\r\n        padding: 20,\r\n        paddingTop: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(coin);\r\n\r\n  useEffect(() => {\r\n    const fetchHistoricData = async () => {\r\n      const { data } = await axios.get(\r\n        HistoricalChart(coin.id, days, currency)\r\n      );\r\n      setflag(true);\r\n      setHistoricData(data.prices);\r\n    };\r\n    fetchHistoricData();\r\n  }, [days]);\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.container}>\r\n        {!historicData | (flag === false) ? (\r\n          <CircularProgress\r\n            style={{ color: \"gold\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n                datasets: [\r\n                  {\r\n                    data: historicData.map((coin) => coin[1]),\r\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                    borderColor: \"#EEBC1D\",\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {chartDays.map((day) => (\r\n                <SelectButton\r\n                  key={day.value}\r\n                  onClick={() => {\r\n                    setDays(day.value);\r\n                    setflag(false);\r\n                  }}\r\n                  selected={day.value === days}\r\n                >\r\n                  {day.label}\r\n                </SelectButton>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;\r\n","D:\\VS Code Projects\\crypto_scraping\\src\\data.js",[],[],"D:\\VS Code Projects\\crypto_scraping\\src\\SelectButton.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":50,"column":6,"nodeType":"83","endLine":50,"endColumn":24,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":30,"column":6,"nodeType":"83","endLine":30,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":6,"column":19,"nodeType":"89","messageId":"90","endLine":6,"endColumn":26},{"ruleId":"81","severity":1,"message":"92","line":55,"column":6,"nodeType":"83","endLine":55,"endColumn":12,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["95"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'ChartJS' is defined but never used.","React Hook useEffect has missing dependencies: 'coin.id' and 'currency'. Either include them or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [currency, dispatch, symbol]",{"range":"103","text":"104"},"Update the dependencies array to be: [id]",{"range":"105","text":"106"},"Update the dependencies array to be: [coin.id, currency, days]",{"range":"107","text":"108"},[1263,1281],"[currency, dispatch, symbol]",[973,975],"[id]",[1549,1555],"[coin.id, currency, days]"]